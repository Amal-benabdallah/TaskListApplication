{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\TaskListApp\\\\client\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchTasksAction, deleteTaskAction } from '../features/tasks/tasksSlice';\nimport { deleteTask } from '../services/taskService';\nimport TaskItem from './TaskItem';\nimport AddTaskForm from './AddTaskForm';\nimport EditTaskForm from './EditTaskForm';\nimport ConfirmationDialog from './ConfirmationDialog';\nimport { Button, Container, Card, CardContent, Typography, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  // Assuming the state structure is { tasks: { tasks: [] } }\n  const tasks = useSelector(state => state.tasks.tasks);\n  const dispatch = useDispatch();\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n  const [priority, setPriority] = useState('Low');\n  useEffect(() => {\n    dispatch(fetchTasksAction());\n  }, [dispatch]);\n  const handleDelete = async task => {\n    try {\n      await deleteTask(task.id);\n      dispatch(deleteTaskAction(task.id));\n    } catch (error) {\n      console.error('Failed to delete task:', error);\n    } finally {\n      setShowConfirmDialog(false);\n    }\n  };\n  const confirmDelete = task => {\n    setCurrentTask(task);\n    setShowConfirmDialog(true);\n  };\n  const handleEditClick = task => {\n    setCurrentTask(task);\n    setShowEditForm(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      backgroundColor: '#f0f2f5',\n      // Adjust for more roundness\n      width: '90%',\n      // Adjust the width as per your requirement\n      maxWidth: '700px' // Maximum width, adjust as needed\n      // Centers the card if width is less than 100%\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      sx: {\n        marginBottom: 2,\n        width: '90%',\n        // Adjust the width as per your requirement\n        maxWidth: '700px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Task List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => setShowAddForm(!showAddForm),\n        children: \"+ ADD Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), showAddForm && /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      setPriority: setPriority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }, this), showEditForm && /*#__PURE__*/_jsxDEV(EditTaskForm, {\n      task: currentTask,\n      setPriority: setPriority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 26\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      sx: {\n        backgroundColor: 'white',\n        borderRadius: '16px',\n        // Adjust for more roundness\n        width: '90%',\n        // Adjust the width as per your requirement\n        maxWidth: '700px',\n        // Maximum width, adjust as needed\n        margin: 'auto',\n        // Centers the card if width is less than 100%\n        marginBottom: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(TaskItem, {\n          task: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => handleEditClick(task),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"error\",\n          onClick: () => confirmDelete(task),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this)), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showConfirmDialog,\n      onClose: () => setShowConfirmDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Deletion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Are you sure you want to delete this task?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowConfirmDialog(false),\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleDelete(currentTask),\n          color: \"secondary\",\n          autoFocus: true,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"TBkJQqB50WVpHHaxmpiIma/EhIc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","fetchTasksAction","deleteTaskAction","deleteTask","TaskItem","AddTaskForm","EditTaskForm","ConfirmationDialog","Button","Container","Card","CardContent","Typography","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Grid","jsxDEV","_jsxDEV","TaskList","_s","tasks","state","dispatch","showAddForm","setShowAddForm","showEditForm","setShowEditForm","currentTask","setCurrentTask","showConfirmDialog","setShowConfirmDialog","priority","setPriority","handleDelete","task","id","error","console","confirmDelete","handleEditClick","sx","backgroundColor","width","maxWidth","children","container","justifyContent","alignItems","marginBottom","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","map","borderRadius","margin","open","onClose","autoFocus","_c","$RefreshReg$"],"sources":["D:/Bureau/TaskListApp/client/src/components/TaskList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchTasksAction, deleteTaskAction } from '../features/tasks/tasksSlice';\r\nimport { deleteTask } from '../services/taskService';\r\nimport TaskItem from './TaskItem';\r\nimport AddTaskForm from './AddTaskForm';\r\nimport EditTaskForm from './EditTaskForm';\r\nimport ConfirmationDialog from './ConfirmationDialog';\r\nimport { \r\n    Button, \r\n    Container, \r\n    Card, \r\n    CardContent, \r\n    Typography, \r\n    Dialog, \r\n    DialogActions, \r\n    DialogContent, \r\n    DialogContentText, \r\n    DialogTitle,\r\n    Grid\r\n}  from '@mui/material';\r\n\r\n\r\nconst TaskList = () => {\r\n    // Assuming the state structure is { tasks: { tasks: [] } }\r\n    const tasks = useSelector((state) => state.tasks.tasks);\r\n    const dispatch = useDispatch();\r\n\r\n    const [showAddForm, setShowAddForm] = useState(false);\r\n    const [showEditForm, setShowEditForm] = useState(false);\r\n    const [currentTask, setCurrentTask] = useState(null);\r\n    const [showConfirmDialog, setShowConfirmDialog] = useState(false);\r\n    const [priority, setPriority] = useState('Low');\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTasksAction());\r\n    }, [dispatch]);\r\n\r\n    const handleDelete = async (task) => {\r\n        try {\r\n            await deleteTask(task.id);\r\n            dispatch(deleteTaskAction(task.id));\r\n        } catch (error) {\r\n            console.error('Failed to delete task:', error);\r\n        } finally {\r\n            setShowConfirmDialog(false);\r\n        }\r\n    };\r\n\r\n    const confirmDelete = (task) => {\r\n        setCurrentTask(task);\r\n        setShowConfirmDialog(true);\r\n    };\r\n\r\n    const handleEditClick = (task) => {\r\n        setCurrentTask(task);\r\n        setShowEditForm(true);\r\n    };\r\n\r\n    return (\r\n        <Container sx={{ \r\n            backgroundColor: '#f0f2f5' ,\r\n           // Adjust for more roundness\r\n            width: '90%', // Adjust the width as per your requirement\r\n            maxWidth: '700px', // Maximum width, adjust as needed\r\n      // Centers the card if width is less than 100%\r\n\r\n          }}> {/* Adjust the color as needed */}\r\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ marginBottom: 2 ,  width: '90%', // Adjust the width as per your requirement\r\n            maxWidth: '700px',}}>\r\n            <Typography variant=\"h4\"  >Task List</Typography>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => setShowAddForm(!showAddForm)}>\r\n                + ADD Task\r\n            </Button>\r\n        </Grid>\r\n\r\n        {showAddForm && <AddTaskForm setPriority={setPriority} />}\r\n        {showEditForm && <EditTaskForm task={currentTask} setPriority={setPriority} />}\r\n\r\n        {tasks.map((task) => (\r\n           <Card \r\n           key={task.id} \r\n           variant=\"outlined\" \r\n           sx={{ \r\n             backgroundColor: 'white', \r\n             borderRadius: '16px', // Adjust for more roundness\r\n             width: '90%', // Adjust the width as per your requirement\r\n             maxWidth: '700px', // Maximum width, adjust as needed\r\n             margin: 'auto', // Centers the card if width is less than 100%\r\n             marginBottom: 2 \r\n           }}\r\n         >\r\n                <CardContent>\r\n                    <TaskItem task={task} />\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => handleEditClick(task)}>Edit</Button>\r\n                    <Button variant=\"outlined\" color=\"error\" onClick={() => confirmDelete(task)}>Delete</Button>\r\n                </CardContent>\r\n            </Card>\r\n        ))}\r\n\r\n            {/* Confirmation Dialog */}\r\n            <Dialog open={showConfirmDialog} onClose={() => setShowConfirmDialog(false)}>\r\n                <DialogTitle>{\"Confirm Deletion\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Are you sure you want to delete this task?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setShowConfirmDialog(false)} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => handleDelete(currentTask)} color=\"secondary\" autoFocus>\r\n                        Confirm\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}