{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\TaskListApp\\\\client\\\\src\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateTaskAction, deleteTaskAction } from '../features/tasks/tasksSlice';\nimport { updateTask, deleteTask } from '../services/taskService';\nimport ProgressBar from './ProgressBar';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography, Box } from '@mui/material';\nimport EditTaskForm from './EditTaskForm';\nimport ConfirmationDialog from './ConfirmationDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [progressBarStatus, setProgressBarStatus] = useState(task.status || 'ToDo');\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n  const [priority, setPriority] = useState('Low');\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'High':\n        return 'red';\n      case 'Medium':\n        return 'orange';\n      case 'Low':\n        return 'green';\n      default:\n        return 'black';\n    }\n  };\n  const handleStatusChange = async newStatus => {\n    const updatedTask = {\n      ...task,\n      status: newStatus\n    };\n    try {\n      const result = await updateTask(task.id, updatedTask);\n      dispatch(updateTaskAction(result));\n      setProgressBarStatus(newStatus); // Update progress bar status after successful update\n    } catch (error) {\n      console.error('Error updating task status:', error);\n    }\n  };\n  const handleNextStatus = () => {\n    const statuses = ['ToDo', 'InProgress', 'Completed'];\n    const currentStatusIndex = statuses.indexOf(progressBarStatus);\n    const nextStatusIndex = (currentStatusIndex + 1) % statuses.length;\n    const newStatus = statuses[nextStatusIndex];\n    handleStatusChange(newStatus);\n  };\n  const handleDelete = async task => {\n    try {\n      await deleteTask(task.id);\n      dispatch(deleteTaskAction(task.id));\n    } catch (error) {\n      console.error('Failed to delete task:', error);\n    } finally {\n      setShowConfirmDialog(false);\n    }\n  };\n  const confirmDelete = task => {\n    setCurrentTask(task);\n    setShowConfirmDialog(true);\n  };\n  const handleEditClick = task => {\n    setCurrentTask(task);\n    setShowEditForm(true);\n  };\n\n  // Determine the button text based on the current status\n  const buttonText = progressBarStatus === 'Completed' ? 'Completed' : progressBarStatus === 'InProgress' ? 'InProgress' : 'ToDo';\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      marginBottom: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: task.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        color: getPriorityColor(task.priority)\n      },\n      children: task.priority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      status: progressBarStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleNextStatus,\n      children: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), showEditForm && /*#__PURE__*/_jsxDEV(EditTaskForm, {\n      task: currentTask,\n      setPriority: setPriority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: () => handleEditClick(task),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"error\",\n      onClick: () => confirmDelete(task),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showConfirmDialog,\n      onClose: () => setShowConfirmDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Deletion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Are you sure you want to delete this task?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowConfirmDialog(false),\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleDelete(),\n          color: \"secondary\",\n          autoFocus: true,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskItem, \"MSrFxeGyouAKVnMZULNPRb9KtJM=\", false, function () {\n  return [useDispatch];\n});\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","useDispatch","updateTaskAction","deleteTaskAction","updateTask","deleteTask","ProgressBar","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Typography","Box","EditTaskForm","ConfirmationDialog","jsxDEV","_jsxDEV","TaskItem","task","_s","dispatch","progressBarStatus","setProgressBarStatus","status","showAddForm","setShowAddForm","showEditForm","setShowEditForm","currentTask","setCurrentTask","showConfirmDialog","setShowConfirmDialog","priority","setPriority","getPriorityColor","handleStatusChange","newStatus","updatedTask","result","id","error","console","handleNextStatus","statuses","currentStatusIndex","indexOf","nextStatusIndex","length","handleDelete","confirmDelete","handleEditClick","buttonText","sx","display","alignItems","justifyContent","marginBottom","children","name","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","onClick","open","onClose","autoFocus","_c","$RefreshReg$"],"sources":["D:/Bureau/TaskListApp/client/src/components/TaskItem.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateTaskAction, deleteTaskAction } from '../features/tasks/tasksSlice';\r\nimport { updateTask, deleteTask } from '../services/taskService';\r\nimport ProgressBar from './ProgressBar';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography, Box } from '@mui/material';\r\nimport EditTaskForm from './EditTaskForm';\r\nimport ConfirmationDialog from './ConfirmationDialog';\r\n\r\nconst TaskItem = ({ task }) => {\r\n    const dispatch = useDispatch();\r\n    const [progressBarStatus, setProgressBarStatus] = useState(task.status || 'ToDo');\r\n    const [showAddForm, setShowAddForm] = useState(false);\r\n    const [showEditForm, setShowEditForm] = useState(false);\r\n    const [currentTask, setCurrentTask] = useState(null);\r\n    const [showConfirmDialog, setShowConfirmDialog] = useState(false);\r\n    const [priority, setPriority] = useState('Low');\r\n\r\n    const getPriorityColor = (priority) => {\r\n        switch (priority) {\r\n            case 'High': return 'red';\r\n            case 'Medium': return 'orange';\r\n            case 'Low': return 'green';\r\n            default: return 'black';\r\n        }\r\n    };\r\n\r\n    const handleStatusChange = async (newStatus) => {\r\n        const updatedTask = { ...task, status: newStatus };\r\n        try {\r\n            const result = await updateTask(task.id, updatedTask);\r\n            dispatch(updateTaskAction(result));\r\n            setProgressBarStatus(newStatus); // Update progress bar status after successful update\r\n        } catch (error) {\r\n            console.error('Error updating task status:', error);\r\n        }\r\n    };\r\n\r\n    const handleNextStatus = () => {\r\n        const statuses = ['ToDo', 'InProgress', 'Completed'];\r\n        const currentStatusIndex = statuses.indexOf(progressBarStatus);\r\n        const nextStatusIndex = (currentStatusIndex + 1) % statuses.length;\r\n        const newStatus = statuses[nextStatusIndex];\r\n        handleStatusChange(newStatus);\r\n    };\r\n    const handleDelete = async (task) => {\r\n        try {\r\n            await deleteTask(task.id);\r\n            dispatch(deleteTaskAction(task.id));\r\n        } catch (error) {\r\n            console.error('Failed to delete task:', error);\r\n        } finally {\r\n            setShowConfirmDialog(false);\r\n        }\r\n    };\r\n\r\n    const confirmDelete = (task) => {\r\n        setCurrentTask(task);\r\n        setShowConfirmDialog(true);\r\n    };\r\n\r\n    const handleEditClick = (task) => {\r\n        setCurrentTask(task);\r\n        setShowEditForm(true);\r\n    };\r\n\r\n    // Determine the button text based on the current status\r\n    const buttonText = progressBarStatus === 'Completed' ? 'Completed' : progressBarStatus === 'InProgress' ? 'InProgress' : 'ToDo';\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '10px' }}>\r\n        <Typography>{task.name}</Typography>\r\n        <Typography sx={{ color: getPriorityColor(task.priority) }}>{task.priority}</Typography>\r\n        <ProgressBar status={progressBarStatus} />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleNextStatus}>\r\n            {buttonText}\r\n        </Button>\r\n        {showEditForm && <EditTaskForm task={currentTask} setPriority={setPriority} />}\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => handleEditClick(task)}>Edit</Button>\r\n        <Button variant=\"outlined\" color=\"error\" onClick={() => confirmDelete(task)}>Delete</Button>\r\n        <Dialog open={showConfirmDialog} onClose={() => setShowConfirmDialog(false)}>\r\n            <DialogTitle>{\"Confirm Deletion\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Are you sure you want to delete this task?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => setShowConfirmDialog(false)} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={() => handleDelete()} color=\"secondary\" autoFocus>\r\n                    Confirm\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </Box>\r\n    \r\n   \r\n    );\r\n};\r\n\r\nexport default TaskItem;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,gBAAgB,EAAEC,gBAAgB,QAAQ,8BAA8B;AACjF,SAASC,UAAU,EAAEC,UAAU,QAAQ,yBAAyB;AAChE,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,MAAM,EAAEC,MAAM,EAAEC,aAAa,EAAEC,aAAa,EAAEC,iBAAiB,EAAEC,WAAW,EAAEC,UAAU,EAAEC,GAAG,QAAQ,eAAe;AAC7H,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGrB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACsB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGxB,QAAQ,CAACoB,IAAI,CAACK,MAAM,IAAI,MAAM,CAAC;EACjF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACkC,QAAQ,EAAEC,WAAW,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMoC,gBAAgB,GAAIF,QAAQ,IAAK;IACnC,QAAQA,QAAQ;MACZ,KAAK,MAAM;QAAE,OAAO,KAAK;MACzB,KAAK,QAAQ;QAAE,OAAO,QAAQ;MAC9B,KAAK,KAAK;QAAE,OAAO,OAAO;MAC1B;QAAS,OAAO,OAAO;IAC3B;EACJ,CAAC;EAED,MAAMG,kBAAkB,GAAG,MAAOC,SAAS,IAAK;IAC5C,MAAMC,WAAW,GAAG;MAAE,GAAGnB,IAAI;MAAEK,MAAM,EAAEa;IAAU,CAAC;IAClD,IAAI;MACA,MAAME,MAAM,GAAG,MAAMpC,UAAU,CAACgB,IAAI,CAACqB,EAAE,EAAEF,WAAW,CAAC;MACrDjB,QAAQ,CAACpB,gBAAgB,CAACsC,MAAM,CAAC,CAAC;MAClChB,oBAAoB,CAACc,SAAS,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EACJ,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,MAAMC,QAAQ,GAAG,CAAC,MAAM,EAAE,YAAY,EAAE,WAAW,CAAC;IACpD,MAAMC,kBAAkB,GAAGD,QAAQ,CAACE,OAAO,CAACxB,iBAAiB,CAAC;IAC9D,MAAMyB,eAAe,GAAG,CAACF,kBAAkB,GAAG,CAAC,IAAID,QAAQ,CAACI,MAAM;IAClE,MAAMX,SAAS,GAAGO,QAAQ,CAACG,eAAe,CAAC;IAC3CX,kBAAkB,CAACC,SAAS,CAAC;EACjC,CAAC;EACD,MAAMY,YAAY,GAAG,MAAO9B,IAAI,IAAK;IACjC,IAAI;MACA,MAAMf,UAAU,CAACe,IAAI,CAACqB,EAAE,CAAC;MACzBnB,QAAQ,CAACnB,gBAAgB,CAACiB,IAAI,CAACqB,EAAE,CAAC,CAAC;IACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD,CAAC,SAAS;MACNT,oBAAoB,CAAC,KAAK,CAAC;IAC/B;EACJ,CAAC;EAED,MAAMkB,aAAa,GAAI/B,IAAI,IAAK;IAC5BW,cAAc,CAACX,IAAI,CAAC;IACpBa,oBAAoB,CAAC,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMmB,eAAe,GAAIhC,IAAI,IAAK;IAC9BW,cAAc,CAACX,IAAI,CAAC;IACpBS,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;;EAED;EACA,MAAMwB,UAAU,GAAG9B,iBAAiB,KAAK,WAAW,GAAG,WAAW,GAAGA,iBAAiB,KAAK,YAAY,GAAG,YAAY,GAAG,MAAM;EAE/H,oBACIL,OAAA,CAACJ,GAAG;IAACwC,EAAE,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE,eAAe;MAAEC,YAAY,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC1GzC,OAAA,CAACL,UAAU;MAAA8C,QAAA,EAAEvC,IAAI,CAACwC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eACpC9C,OAAA,CAACL,UAAU;MAACyC,EAAE,EAAE;QAAEW,KAAK,EAAE7B,gBAAgB,CAAChB,IAAI,CAACc,QAAQ;MAAE,CAAE;MAAAyB,QAAA,EAAEvC,IAAI,CAACc;IAAQ;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eACxF9C,OAAA,CAACZ,WAAW;MAACmB,MAAM,EAAEF;IAAkB;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1C9C,OAAA,CAACX,MAAM;MAAC2D,OAAO,EAAC,WAAW;MAACD,KAAK,EAAC,SAAS;MAACE,OAAO,EAAEvB,gBAAiB;MAAAe,QAAA,EACjEN;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,EACRpC,YAAY,iBAAIV,OAAA,CAACH,YAAY;MAACK,IAAI,EAAEU,WAAY;MAACK,WAAW,EAAEA;IAAY;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9E9C,OAAA,CAACX,MAAM;MAAC2D,OAAO,EAAC,WAAW;MAACD,KAAK,EAAC,WAAW;MAACE,OAAO,EAAEA,CAAA,KAAMf,eAAe,CAAChC,IAAI,CAAE;MAAAuC,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjG9C,OAAA,CAACX,MAAM;MAAC2D,OAAO,EAAC,UAAU;MAACD,KAAK,EAAC,OAAO;MAACE,OAAO,EAAEA,CAAA,KAAMhB,aAAa,CAAC/B,IAAI,CAAE;MAAAuC,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5F9C,OAAA,CAACV,MAAM;MAAC4D,IAAI,EAAEpC,iBAAkB;MAACqC,OAAO,EAAEA,CAAA,KAAMpC,oBAAoB,CAAC,KAAK,CAAE;MAAA0B,QAAA,gBACxEzC,OAAA,CAACN,WAAW;QAAA+C,QAAA,EAAE;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC,eAC/C9C,OAAA,CAACR,aAAa;QAAAiD,QAAA,eACVzC,OAAA,CAACP,iBAAiB;UAAAgD,QAAA,EAAC;QAEnB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAChB9C,OAAA,CAACT,aAAa;QAAAkD,QAAA,gBACVzC,OAAA,CAACX,MAAM;UAAC4D,OAAO,EAAEA,CAAA,KAAMlC,oBAAoB,CAAC,KAAK,CAAE;UAACgC,KAAK,EAAC,SAAS;UAAAN,QAAA,EAAC;QAEpE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT9C,OAAA,CAACX,MAAM;UAAC4D,OAAO,EAAEA,CAAA,KAAMjB,YAAY,CAAC,CAAE;UAACe,KAAK,EAAC,WAAW;UAACK,SAAS;UAAAX,QAAA,EAAC;QAEnE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAIV,CAAC;AAAC3C,EAAA,CA3FIF,QAAQ;EAAA,QACOlB,WAAW;AAAA;AAAAsE,EAAA,GAD1BpD,QAAQ;AA6Fd,eAAeA,QAAQ;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}