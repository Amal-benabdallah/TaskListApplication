{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000/api/tasks'; // This should match the route in your Express server\n\n// Fetch all tasks\nexport const fetchTasks = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching tasks:', error);\n    throw error;\n  }\n};\n\n// Add a new task\nexport const addTask = async task => {\n  try {\n    const response = await axios.post(API_URL, task);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding task:', error);\n    throw error;\n  }\n};\n\n// Update an existing task\nexport const updateTask = async (id, updatedTask) => {\n  try {\n    const response = await axios.put(`${API_URL}/${id}`, updatedTask);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating task:', error);\n    throw error;\n  }\n};\n\n// Delete a task\nexport const deleteTask = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting task:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","fetchTasks","response","get","data","error","console","addTask","task","post","updateTask","id","updatedTask","put","deleteTask","delete"],"sources":["D:/Bureau/TaskListApp/client/src/services/taskService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3000/api/tasks'; // This should match the route in your Express server\r\n\r\n// Fetch all tasks\r\nexport const fetchTasks = async () => {\r\n    try {\r\n        const response = await axios.get(API_URL);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Add a new task\r\nexport const addTask = async (task) => {\r\n    try {\r\n        const response = await axios.post(API_URL, task);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error adding task:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Update an existing task\r\nexport const updateTask = async (id, updatedTask) => {\r\n    try {\r\n        const response = await axios.put(`${API_URL}/${id}`, updatedTask);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error updating task:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Delete a task\r\nexport const deleteTask = async (id) => {\r\n    try {\r\n        const response = await axios.delete(`${API_URL}/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error deleting task:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,iCAAiC,CAAC,CAAC;;AAEnD;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;IACzC,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,OAAO,GAAG,MAAOC,IAAI,IAAK;EACnC,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAACT,OAAO,EAAEQ,IAAI,CAAC;IAChD,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAAEC,WAAW,KAAK;EACjD,IAAI;IACA,MAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACc,GAAG,CAAE,GAAEb,OAAQ,IAAGW,EAAG,EAAC,EAAEC,WAAW,CAAC;IACjE,OAAOV,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMS,UAAU,GAAG,MAAOH,EAAE,IAAK;EACpC,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACgB,MAAM,CAAE,GAAEf,OAAQ,IAAGW,EAAG,EAAC,CAAC;IACvD,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACf;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}