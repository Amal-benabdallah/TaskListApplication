{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\TaskListApp\\\\client\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchTasksAction, deleteTaskAction } from '../features/tasks/tasksSlice';\nimport { deleteTask } from '../services/taskService';\nimport TaskItem from './TaskItem';\nimport AddTaskForm from './AddTaskForm';\nimport EditTaskForm from './EditTaskForm';\nimport ConfirmationDialog from './ConfirmationDialog';\nimport { Button, Container, Card, CardContent, Typography, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  // Assuming the state structure is { tasks: { tasks: [] } }\n  const tasks = useSelector(state => state.tasks.tasks);\n  const dispatch = useDispatch();\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n  const [priority, setPriority] = useState('Low');\n  useEffect(() => {\n    dispatch(fetchTasksAction());\n  }, [dispatch]);\n  const handleDelete = async task => {\n    try {\n      await deleteTask(task.id);\n      dispatch(deleteTaskAction(task.id));\n    } catch (error) {\n      console.error('Failed to delete task:', error);\n    } finally {\n      setShowConfirmDialog(false);\n    }\n  };\n  const confirmDelete = task => {\n    setCurrentTask(task);\n    setShowConfirmDialog(true);\n  };\n  const handleEditClick = task => {\n    setCurrentTask(task);\n    setShowEditForm(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => setShowAddForm(!showAddForm),\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), showAddForm && /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      setPriority: setPriority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }, this), showEditForm && /*#__PURE__*/_jsxDEV(EditTaskForm, {\n      task: currentTask,\n      setPriority: setPriority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 30\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      sx: {\n        marginBottom: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(TaskItem, {\n          task: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => handleEditClick(task),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"error\",\n          onClick: () => confirmDelete(task),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showConfirmDialog,\n      onClose: () => setShowConfirmDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Deletion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Are you sure you want to delete this task?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowConfirmDialog(false),\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleDelete(currentTask),\n          color: \"secondary\",\n          autoFocus: true,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"TBkJQqB50WVpHHaxmpiIma/EhIc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","fetchTasksAction","deleteTaskAction","deleteTask","TaskItem","AddTaskForm","EditTaskForm","ConfirmationDialog","Button","Container","Card","CardContent","Typography","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","jsxDEV","_jsxDEV","TaskList","_s","tasks","state","dispatch","showAddForm","setShowAddForm","showEditForm","setShowEditForm","currentTask","setCurrentTask","showConfirmDialog","setShowConfirmDialog","priority","setPriority","handleDelete","task","id","error","console","confirmDelete","handleEditClick","children","variant","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","sx","marginBottom","open","onClose","autoFocus","_c","$RefreshReg$"],"sources":["D:/Bureau/TaskListApp/client/src/components/TaskList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchTasksAction, deleteTaskAction } from '../features/tasks/tasksSlice';\r\nimport { deleteTask } from '../services/taskService';\r\nimport TaskItem from './TaskItem';\r\nimport AddTaskForm from './AddTaskForm';\r\nimport EditTaskForm from './EditTaskForm';\r\nimport ConfirmationDialog from './ConfirmationDialog';\r\nimport { Button, Container, Card, CardContent, Typography, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\r\n\r\n\r\nconst TaskList = () => {\r\n    // Assuming the state structure is { tasks: { tasks: [] } }\r\n    const tasks = useSelector((state) => state.tasks.tasks);\r\n    const dispatch = useDispatch();\r\n\r\n    const [showAddForm, setShowAddForm] = useState(false);\r\n    const [showEditForm, setShowEditForm] = useState(false);\r\n    const [currentTask, setCurrentTask] = useState(null);\r\n    const [showConfirmDialog, setShowConfirmDialog] = useState(false);\r\n    const [priority, setPriority] = useState('Low');\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTasksAction());\r\n    }, [dispatch]);\r\n\r\n    const handleDelete = async (task) => {\r\n        try {\r\n            await deleteTask(task.id);\r\n            dispatch(deleteTaskAction(task.id));\r\n        } catch (error) {\r\n            console.error('Failed to delete task:', error);\r\n        } finally {\r\n            setShowConfirmDialog(false);\r\n        }\r\n    };\r\n\r\n    const confirmDelete = (task) => {\r\n        setCurrentTask(task);\r\n        setShowConfirmDialog(true);\r\n    };\r\n\r\n    const handleEditClick = (task) => {\r\n        setCurrentTask(task);\r\n        setShowEditForm(true);\r\n    };\r\n    return (\r\n        <Container>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => setShowAddForm(!showAddForm)}>Add Task</Button>\r\n            {showAddForm && <AddTaskForm setPriority={setPriority} />}\r\n            {showEditForm && <EditTaskForm task={currentTask} setPriority={setPriority} />}\r\n            {tasks.map((task) => (\r\n                <Card key={task.id} variant=\"outlined\" sx={{ marginBottom: 2 }}>\r\n                    <CardContent>\r\n                        <TaskItem task={task} />\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() => handleEditClick(task)}>Edit</Button>\r\n                        <Button variant=\"outlined\" color=\"error\" onClick={() => confirmDelete(task)}>Delete</Button>\r\n                    </CardContent>\r\n                </Card>\r\n            ))}\r\n            <Dialog open={showConfirmDialog} onClose={() => setShowConfirmDialog(false)}>\r\n                <DialogTitle>{\"Confirm Deletion\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Are you sure you want to delete this task?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setShowConfirmDialog(false)} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => handleDelete(currentTask)} color=\"secondary\" autoFocus>\r\n                        Confirm\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}