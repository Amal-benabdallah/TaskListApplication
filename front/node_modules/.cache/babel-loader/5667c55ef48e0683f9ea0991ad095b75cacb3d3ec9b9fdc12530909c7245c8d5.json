{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\TaskListApp\\\\client\\\\src\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [progressBarStatus, setProgressBarStatus] = useState(task.status || 'ToDo');\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'High':\n        return 'red';\n      case 'Medium':\n        return 'orange';\n      case 'Low':\n        return 'green';\n      default:\n        return 'black';\n    }\n  };\n  const handleStatusChange = async newStatus => {\n    const updatedTask = {\n      ...task,\n      status: newStatus\n    };\n    try {\n      const result = await updateTask(task.id, updatedTask); // API call\n      dispatch(updateTaskAction(result)); // Redux action\n    } catch (error) {\n      console.error('Error updating task status:', error);\n    }\n  };\n  const handleProgressBarClick = async () => {\n    const statuses = ['ToDo', 'InProgress', 'Completed'];\n    const nextIndex = (statuses.indexOf(progressBarStatus) + 1) % statuses.length;\n    const newStatus = statuses[nextIndex];\n    setProgressBarStatus(newStatus);\n    await handleStatusChange(newStatus);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: task.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: getPriorityColor(task.priority)\n      },\n      children: task.priority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      status: progressBarStatus,\n      onClick: handleProgressBarClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleStatusChange('To Do'),\n      style: {\n        backgroundColor: task.status === 'To Do' ? 'lightgray' : 'transparent'\n      },\n      children: \"To Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleStatusChange('In Progress'),\n      style: {\n        backgroundColor: task.status === 'In Progress' ? 'lightgray' : 'transparent'\n      },\n      children: \"In Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleStatusChange('Completed'),\n      style: {\n        backgroundColor: task.status === 'Completed' ? 'lightgray' : 'transparent'\n      },\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskItem, \"B9mJlnSchBAJs8pJ0mcsTPGDf5Q=\", true);\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["TaskItem","task","_s","dispatch","useDispatch","progressBarStatus","setProgressBarStatus","useState","status","getPriorityColor","priority","handleStatusChange","newStatus","updatedTask","result","updateTask","id","updateTaskAction","error","console","handleProgressBarClick","statuses","nextIndex","indexOf","length","_jsxDEV","style","display","alignItems","justifyContent","children","name","fileName","_jsxFileName","lineNumber","columnNumber","color","ProgressBar","onClick","backgroundColor","_c","$RefreshReg$"],"sources":["D:/Bureau/TaskListApp/client/src/components/TaskItem.js"],"sourcesContent":["\r\nconst TaskItem = ({ task }) => {\r\n    const dispatch = useDispatch();\r\n    const [progressBarStatus, setProgressBarStatus] = useState(task.status || 'ToDo');\r\n\r\n    const getPriorityColor = (priority) => {\r\n        switch(priority) {\r\n            case 'High': return 'red';\r\n            case 'Medium': return 'orange';\r\n            case 'Low': return 'green';\r\n            default: return 'black';\r\n        }\r\n    };\r\n\r\n    const handleStatusChange = async (newStatus) => {\r\n        const updatedTask = { ...task, status: newStatus };\r\n        try {\r\n            const result = await updateTask(task.id, updatedTask); // API call\r\n            dispatch(updateTaskAction(result)); // Redux action\r\n        } catch (error) {\r\n            console.error('Error updating task status:', error);\r\n        }\r\n    };\r\n\r\n    const handleProgressBarClick = async () => {\r\n        const statuses = ['ToDo', 'InProgress', 'Completed'];\r\n        const nextIndex = (statuses.indexOf(progressBarStatus) + 1) % statuses.length;\r\n        const newStatus = statuses[nextIndex];\r\n        setProgressBarStatus(newStatus);\r\n        await handleStatusChange(newStatus);\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n            <span>{task.name}</span>\r\n            <span style={{ color: getPriorityColor(task.priority) }}>{task.priority}</span>\r\n            <ProgressBar status={progressBarStatus} onClick={handleProgressBarClick} />\r\n            <button onClick={() => handleStatusChange('To Do')}\r\n                style={{ backgroundColor: task.status === 'To Do' ? 'lightgray' : 'transparent' }}>\r\n                To Do\r\n            </button>\r\n            <button onClick={() => handleStatusChange('In Progress')}\r\n                style={{ backgroundColor: task.status === 'In Progress' ? 'lightgray' : 'transparent' }}>\r\n                In Progress\r\n            </button>\r\n            <button onClick={() => handleStatusChange('Completed')}\r\n                style={{ backgroundColor: task.status === 'Completed' ? 'lightgray' : 'transparent' }}>\r\n                Completed\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}